# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import django.contrib.gis.db.models.fields


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PlanetOsmLine',
            fields=[
                ('access', models.TextField(blank=True)),
                ('addr_housename', models.TextField(db_column=b'addr:housename', blank=True)),
                ('addr_housenumber', models.TextField(db_column=b'addr:housenumber', blank=True)),
                ('addr_interpolation', models.TextField(db_column=b'addr:interpolation', blank=True)),
                ('admin_level', models.TextField(blank=True)),
                ('aerialway', models.TextField(blank=True)),
                ('aeroway', models.TextField(blank=True)),
                ('amenity', models.TextField(blank=True)),
                ('area', models.TextField(blank=True)),
                ('barrier', models.TextField(blank=True)),
                ('bicycle', models.TextField(blank=True)),
                ('boundary', models.TextField(blank=True)),
                ('brand', models.TextField(blank=True)),
                ('bridge', models.TextField(blank=True)),
                ('building', models.TextField(blank=True)),
                ('construction', models.TextField(blank=True)),
                ('covered', models.TextField(blank=True)),
                ('culvert', models.TextField(blank=True)),
                ('cutting', models.TextField(blank=True)),
                ('denomination', models.TextField(blank=True)),
                ('disused', models.TextField(blank=True)),
                ('embankment', models.TextField(blank=True)),
                ('foot', models.TextField(blank=True)),
                ('generator_source', models.TextField(db_column=b'generator:source', blank=True)),
                ('harbour', models.TextField(blank=True)),
                ('highway', models.TextField(blank=True)),
                ('historic', models.TextField(blank=True)),
                ('horse', models.TextField(blank=True)),
                ('intermittent', models.TextField(blank=True)),
                ('junction', models.TextField(blank=True)),
                ('landuse', models.TextField(blank=True)),
                ('layer', models.TextField(blank=True)),
                ('leisure', models.TextField(blank=True)),
                ('lock', models.TextField(blank=True)),
                ('man_made', models.TextField(blank=True)),
                ('military', models.TextField(blank=True)),
                ('motorcar', models.TextField(blank=True)),
                ('name', models.TextField(blank=True)),
                ('natural', models.TextField(blank=True)),
                ('office', models.TextField(blank=True)),
                ('oneway', models.TextField(blank=True)),
                ('operator', models.TextField(blank=True)),
                ('place', models.TextField(blank=True)),
                ('population', models.TextField(blank=True)),
                ('power', models.TextField(blank=True)),
                ('power_source', models.TextField(blank=True)),
                ('public_transport', models.TextField(blank=True)),
                ('railway', models.TextField(blank=True)),
                ('ref', models.TextField(blank=True)),
                ('religion', models.TextField(blank=True)),
                ('route', models.TextField(blank=True)),
                ('service', models.TextField(blank=True)),
                ('shop', models.TextField(blank=True)),
                ('sport', models.TextField(blank=True)),
                ('surface', models.TextField(blank=True)),
                ('toll', models.TextField(blank=True)),
                ('tourism', models.TextField(blank=True)),
                ('tower_type', models.TextField(db_column=b'tower:type', blank=True)),
                ('tunnel', models.TextField(blank=True)),
                ('water', models.TextField(blank=True)),
                ('waterway', models.TextField(blank=True)),
                ('wetland', models.TextField(blank=True)),
                ('width', models.TextField(blank=True)),
                ('wood', models.TextField(blank=True)),
                ('z_order', models.IntegerField(null=True, blank=True)),
                ('osm_id', models.BigIntegerField(serialize=False, primary_key=True, blank=True)),
                ('way_area', models.FloatField(null=True, blank=True)),
                ('way', django.contrib.gis.db.models.fields.LineStringField(srid=900913, null=True, blank=True)),
            ],
            options={
                'db_table': 'planet_osm_line',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PlanetOsmPoint',
            fields=[
                ('access', models.TextField(blank=True)),
                ('addr_housename', models.TextField(db_column=b'addr:housename', blank=True)),
                ('addr_housenumber', models.TextField(db_column=b'addr:housenumber', blank=True)),
                ('addr_interpolation', models.TextField(db_column=b'addr:interpolation', blank=True)),
                ('admin_level', models.TextField(blank=True)),
                ('aerialway', models.TextField(blank=True)),
                ('aeroway', models.TextField(blank=True)),
                ('amenity', models.TextField(blank=True)),
                ('area', models.TextField(blank=True)),
                ('barrier', models.TextField(blank=True)),
                ('bicycle', models.TextField(blank=True)),
                ('boundary', models.TextField(blank=True)),
                ('brand', models.TextField(blank=True)),
                ('bridge', models.TextField(blank=True)),
                ('building', models.TextField(blank=True)),
                ('construction', models.TextField(blank=True)),
                ('covered', models.TextField(blank=True)),
                ('culvert', models.TextField(blank=True)),
                ('cutting', models.TextField(blank=True)),
                ('denomination', models.TextField(blank=True)),
                ('disused', models.TextField(blank=True)),
                ('embankment', models.TextField(blank=True)),
                ('foot', models.TextField(blank=True)),
                ('generator_source', models.TextField(db_column=b'generator:source', blank=True)),
                ('harbour', models.TextField(blank=True)),
                ('highway', models.TextField(blank=True)),
                ('historic', models.TextField(blank=True)),
                ('horse', models.TextField(blank=True)),
                ('intermittent', models.TextField(blank=True)),
                ('junction', models.TextField(blank=True)),
                ('landuse', models.TextField(blank=True)),
                ('layer', models.TextField(blank=True)),
                ('leisure', models.TextField(blank=True)),
                ('lock', models.TextField(blank=True)),
                ('man_made', models.TextField(blank=True)),
                ('military', models.TextField(blank=True)),
                ('motorcar', models.TextField(blank=True)),
                ('name', models.TextField(blank=True)),
                ('natural', models.TextField(blank=True)),
                ('office', models.TextField(blank=True)),
                ('oneway', models.TextField(blank=True)),
                ('operator', models.TextField(blank=True)),
                ('place', models.TextField(blank=True)),
                ('population', models.TextField(blank=True)),
                ('power', models.TextField(blank=True)),
                ('power_source', models.TextField(blank=True)),
                ('public_transport', models.TextField(blank=True)),
                ('railway', models.TextField(blank=True)),
                ('ref', models.TextField(blank=True)),
                ('religion', models.TextField(blank=True)),
                ('route', models.TextField(blank=True)),
                ('service', models.TextField(blank=True)),
                ('shop', models.TextField(blank=True)),
                ('sport', models.TextField(blank=True)),
                ('surface', models.TextField(blank=True)),
                ('toll', models.TextField(blank=True)),
                ('tourism', models.TextField(blank=True)),
                ('tower_type', models.TextField(db_column=b'tower:type', blank=True)),
                ('tunnel', models.TextField(blank=True)),
                ('water', models.TextField(blank=True)),
                ('waterway', models.TextField(blank=True)),
                ('wetland', models.TextField(blank=True)),
                ('width', models.TextField(blank=True)),
                ('wood', models.TextField(blank=True)),
                ('z_order', models.IntegerField(null=True, blank=True)),
                ('osm_id', models.BigIntegerField(serialize=False, primary_key=True, blank=True)),
                ('capital', models.TextField(blank=True)),
                ('ele', models.TextField(blank=True)),
                ('poi', models.TextField(blank=True)),
                ('way', django.contrib.gis.db.models.fields.PointField(srid=900913, null=True, blank=True)),
            ],
            options={
                'db_table': 'planet_osm_point',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PlanetOsmPolygon',
            fields=[
                ('access', models.TextField(blank=True)),
                ('addr_housename', models.TextField(db_column=b'addr:housename', blank=True)),
                ('addr_housenumber', models.TextField(db_column=b'addr:housenumber', blank=True)),
                ('addr_interpolation', models.TextField(db_column=b'addr:interpolation', blank=True)),
                ('admin_level', models.TextField(blank=True)),
                ('aerialway', models.TextField(blank=True)),
                ('aeroway', models.TextField(blank=True)),
                ('amenity', models.TextField(blank=True)),
                ('area', models.TextField(blank=True)),
                ('barrier', models.TextField(blank=True)),
                ('bicycle', models.TextField(blank=True)),
                ('boundary', models.TextField(blank=True)),
                ('brand', models.TextField(blank=True)),
                ('bridge', models.TextField(blank=True)),
                ('building', models.TextField(blank=True)),
                ('construction', models.TextField(blank=True)),
                ('covered', models.TextField(blank=True)),
                ('culvert', models.TextField(blank=True)),
                ('cutting', models.TextField(blank=True)),
                ('denomination', models.TextField(blank=True)),
                ('disused', models.TextField(blank=True)),
                ('embankment', models.TextField(blank=True)),
                ('foot', models.TextField(blank=True)),
                ('generator_source', models.TextField(db_column=b'generator:source', blank=True)),
                ('harbour', models.TextField(blank=True)),
                ('highway', models.TextField(blank=True)),
                ('historic', models.TextField(blank=True)),
                ('horse', models.TextField(blank=True)),
                ('intermittent', models.TextField(blank=True)),
                ('junction', models.TextField(blank=True)),
                ('landuse', models.TextField(blank=True)),
                ('layer', models.TextField(blank=True)),
                ('leisure', models.TextField(blank=True)),
                ('lock', models.TextField(blank=True)),
                ('man_made', models.TextField(blank=True)),
                ('military', models.TextField(blank=True)),
                ('motorcar', models.TextField(blank=True)),
                ('name', models.TextField(blank=True)),
                ('natural', models.TextField(blank=True)),
                ('office', models.TextField(blank=True)),
                ('oneway', models.TextField(blank=True)),
                ('operator', models.TextField(blank=True)),
                ('place', models.TextField(blank=True)),
                ('population', models.TextField(blank=True)),
                ('power', models.TextField(blank=True)),
                ('power_source', models.TextField(blank=True)),
                ('public_transport', models.TextField(blank=True)),
                ('railway', models.TextField(blank=True)),
                ('ref', models.TextField(blank=True)),
                ('religion', models.TextField(blank=True)),
                ('route', models.TextField(blank=True)),
                ('service', models.TextField(blank=True)),
                ('shop', models.TextField(blank=True)),
                ('sport', models.TextField(blank=True)),
                ('surface', models.TextField(blank=True)),
                ('toll', models.TextField(blank=True)),
                ('tourism', models.TextField(blank=True)),
                ('tower_type', models.TextField(db_column=b'tower:type', blank=True)),
                ('tunnel', models.TextField(blank=True)),
                ('water', models.TextField(blank=True)),
                ('waterway', models.TextField(blank=True)),
                ('wetland', models.TextField(blank=True)),
                ('width', models.TextField(blank=True)),
                ('wood', models.TextField(blank=True)),
                ('z_order', models.IntegerField(null=True, blank=True)),
                ('osm_id', models.BigIntegerField(serialize=False, primary_key=True, blank=True)),
                ('tracktype', models.TextField(blank=True)),
                ('way_area', models.FloatField(null=True, blank=True)),
                ('way', django.contrib.gis.db.models.fields.GeometryField(srid=900913, null=True, blank=True)),
            ],
            options={
                'db_table': 'planet_osm_polygon',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PlanetOsmRoads',
            fields=[
                ('access', models.TextField(blank=True)),
                ('addr_housename', models.TextField(db_column=b'addr:housename', blank=True)),
                ('addr_housenumber', models.TextField(db_column=b'addr:housenumber', blank=True)),
                ('addr_interpolation', models.TextField(db_column=b'addr:interpolation', blank=True)),
                ('admin_level', models.TextField(blank=True)),
                ('aerialway', models.TextField(blank=True)),
                ('aeroway', models.TextField(blank=True)),
                ('amenity', models.TextField(blank=True)),
                ('area', models.TextField(blank=True)),
                ('barrier', models.TextField(blank=True)),
                ('bicycle', models.TextField(blank=True)),
                ('boundary', models.TextField(blank=True)),
                ('brand', models.TextField(blank=True)),
                ('bridge', models.TextField(blank=True)),
                ('building', models.TextField(blank=True)),
                ('construction', models.TextField(blank=True)),
                ('covered', models.TextField(blank=True)),
                ('culvert', models.TextField(blank=True)),
                ('cutting', models.TextField(blank=True)),
                ('denomination', models.TextField(blank=True)),
                ('disused', models.TextField(blank=True)),
                ('embankment', models.TextField(blank=True)),
                ('foot', models.TextField(blank=True)),
                ('generator_source', models.TextField(db_column=b'generator:source', blank=True)),
                ('harbour', models.TextField(blank=True)),
                ('highway', models.TextField(blank=True)),
                ('historic', models.TextField(blank=True)),
                ('horse', models.TextField(blank=True)),
                ('intermittent', models.TextField(blank=True)),
                ('junction', models.TextField(blank=True)),
                ('landuse', models.TextField(blank=True)),
                ('layer', models.TextField(blank=True)),
                ('leisure', models.TextField(blank=True)),
                ('lock', models.TextField(blank=True)),
                ('man_made', models.TextField(blank=True)),
                ('military', models.TextField(blank=True)),
                ('motorcar', models.TextField(blank=True)),
                ('name', models.TextField(blank=True)),
                ('natural', models.TextField(blank=True)),
                ('office', models.TextField(blank=True)),
                ('oneway', models.TextField(blank=True)),
                ('operator', models.TextField(blank=True)),
                ('place', models.TextField(blank=True)),
                ('population', models.TextField(blank=True)),
                ('power', models.TextField(blank=True)),
                ('power_source', models.TextField(blank=True)),
                ('public_transport', models.TextField(blank=True)),
                ('railway', models.TextField(blank=True)),
                ('ref', models.TextField(blank=True)),
                ('religion', models.TextField(blank=True)),
                ('route', models.TextField(blank=True)),
                ('service', models.TextField(blank=True)),
                ('shop', models.TextField(blank=True)),
                ('sport', models.TextField(blank=True)),
                ('surface', models.TextField(blank=True)),
                ('toll', models.TextField(blank=True)),
                ('tourism', models.TextField(blank=True)),
                ('tower_type', models.TextField(db_column=b'tower:type', blank=True)),
                ('tunnel', models.TextField(blank=True)),
                ('water', models.TextField(blank=True)),
                ('waterway', models.TextField(blank=True)),
                ('wetland', models.TextField(blank=True)),
                ('width', models.TextField(blank=True)),
                ('wood', models.TextField(blank=True)),
                ('z_order', models.IntegerField(null=True, blank=True)),
                ('osm_id', models.BigIntegerField(serialize=False, primary_key=True, blank=True)),
                ('tracktype', models.TextField(blank=True)),
                ('way_area', models.FloatField(null=True, blank=True)),
                ('way', django.contrib.gis.db.models.fields.LineStringField(srid=900913, null=True, blank=True)),
            ],
            options={
                'db_table': 'planet_osm_roads',
                'managed': False,
            },
            bases=(models.Model,),
        ),
    ]
